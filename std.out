=== program start ===
define i32 getint ()
define i32 getch ()
define f32 getfloat ()
define i32 getarray (i32* $0_arg1)
define i32 getfarray (f32* $0_arg1)
define void putint (i32 $0_arg1)
define void putch (i32 $0_arg1)
define void putfloat (f32 $0_arg1)
define void putarray (i32 $0_arg1, i32* $1_arg2)
define void putfarray (i32 $0_arg1, f32* $1_arg2)
define void putf (str $0_arg1)
define void _sysy_starttime (i32 $0_arg1)
define void _sysy_stoptime (i32 $0_arg1)
define void memset (void* $0_arg1, i32 $1_arg2, i32 $2_arg3)
define i32 gcd (i32 $0_m, i32 $1_n)
define i32 main ()
=== program end ===
0

      ---------------IR begin---------------------
i32 @getint()
i32 @getch()
f32 @getfloat()
i32 @getarray()
i32 @getfarray()
void @putint()
void @putch()
void @putfloat()
void @putarray()
void @putfarray()
void @putf()
void @_sysy_starttime()
void @_sysy_stoptime()
void @memset()
i32 @gcd(i32 %0, i32 %1)
{
b0:                       ;
    i32* %2 = alloca i32*, align 8
    i32* %3 = alloca i32*, align 8
    store i32* %3 i32 %0
    i32* %5 = alloca i32*, align 8
    store i32* %5 i32 %1
    i32 %7 = load i32* %5
    i32 %8 = i32 %7 == i32 0
    br %8, lable b1, lable b2
b1:                       ;%0
    i32 %10 = load i32* %3
    store i32* %2 i32 %10
    br lable b6
b2:                       ;%0, %3
    i32 %13 = load i32* %5
    i32 %14 = load i32* %3
    i32 %15 = load i32* %5
    i32 %16 = i32 %14 % i32 %15
    i32 %17 = call @gcd(i32 %13, i32 %16)
    store i32* %2 i32 %17
    br lable b6
b3:                       ;
    br lable b2
b4:                       ;
    store i32* %2 i32 0
    br lable b6
b5:                       ;
b6:                       ;%1, %2, %4
    i32 %23 = load i32* %2
    ret %23
}
i32 @main()
{
b0:                       ;
    i32* %0 = alloca i32*, align 8
    i32* %1 = alloca i32*, align 8
    i32* %2 = alloca i32*, align 8
    i32* %3 = alloca i32*, align 8
    i32 %4 = call @getint()
    store i32* %1 i32 %4
    i32 %6 = load i32* %1
    i32 %7 = i32 %6 > i32 0
    br %7, lable b1, lable b2
b1:                       ;%0, %3
    i32 %9 = call @getint()
    store i32* %2 i32 %9
    i32 %11 = call @getint()
    store i32* %3 i32 %11
    i32 %13 = load i32* %2
    i32 %14 = load i32* %3
    i32 %15 = call @gcd(i32 %13, i32 %14)
    call @putint(i32 %15)
    call @putch(i32 10)
    i32 %18 = load i32* %1
    i32 %19 = i32 %18 - i32 1
    store i32* %1 i32 %19
    br lable b3
b2:                       ;%0, %3
    store i32* %0 i32 0
    br lable b6
b3:                       ;%1
    i32 %24 = load i32* %1
    i32 %25 = i32 %24 > i32 0
    br %25, lable b1, lable b2
b4:                       ;
    store i32* %0 i32 0
    br lable b6
b5:                       ;
b6:                       ;%2, %4
    i32 %29 = load i32* %0
    ret %29
}

      ---------------IR end-----------------------

      ---------------IR begin---------------------
i32 @getint()
i32 @getch()
f32 @getfloat()
i32 @getarray()
i32 @getfarray()
void @putint()
void @putch()
void @putfloat()
void @putarray()
void @putfarray()
void @putf()
void @_sysy_starttime()
void @_sysy_stoptime()
void @memset()
i32 @gcd(i32 %0, i32 %1)
{
b0:                       ;
    i32 %2 =  i32 %0
    i32 %3 =  i32 %1
    i32 %4 = i32 %3 == i32 0
    br %4, lable b1, lable b2
b1:                       ;%0
    br lable b6
b2:                       ;%0, %3
    i32 %7 = i32 %2 % i32 %3
    i32 %8 = call @gcd(i32 %13, i32 %7)
    br lable b6
b3:                       ;
    br lable b2
b4:                       ;
    store i32 %43 i32 0
    br lable b6
b5:                       ;
b6:                       ;%1, %2, %4
    i32 %94 = phi({label : b1, %2}, {label : b2, %8})
    ret %94
}
i32 @main()
{
b0:                       ;
    i32 %0 = call @getint()
    i32 %1 = i32 %0 > i32 0
    br %1, lable b1, lable b2
b1:                       ;%0, %3
    i32 %103 = phi({label : b3, %8}, {label : b0, %0})
    i32 %105 = phi({label : b3, %3}, {label : b0, %114})
    i32 %107 = phi({label : b3, %4}, {label : b0, %116})
    i32 %3 = call @getint()
    i32 %4 = call @getint()
    i32 %5 = call @gcd(i32 %13, i32 %14)
    call @putint(i32 %5)
    call @putch(i32 10)
    i32 %8 = i32 %103 - i32 1
    br lable b3
b2:                       ;%0, %3
    i32 %104 = phi({label : b3, %8}, {label : b0, %0})
    i32 %106 = phi({label : b3, %3}, {label : b0, %114})
    i32 %108 = phi({label : b3, %4}, {label : b0, %116})
    i32 %10 =  i32 0
    br lable b6
b3:                       ;%1
    i32 %12 = i32 %8 > i32 0
    br %12, lable b1, lable b2
b4:                       ;
    store i32 %88 i32 0
    br lable b6
b5:                       ;
b6:                       ;%2, %4
    ret %10
}

      ---------------IR end-----------------------
